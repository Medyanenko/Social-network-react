{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","fullName","profileStatus","mainPhoto","contact","errors","item","postsBlock","posts","Post","react_default","className","s","src","alt","message","likesCount","AddPostForm","formik_esm","initialValues","newPostText","validationSchema","validationSchemaPostForm","onSubmit","values","_ref","resetForm","addPost","addNewPost","name","as","placeholder","component","type","MyPosts","postsElements","profilePage","map","p","id","MyPosts_Post_Post","like","MyPosts_AddPostForm","MyPostsContainer","dispatch","addPostActionCreator","ProfileStatusWithHook","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataForm","profile","handleSubmit","goToEditMode","validationSchemaProfilForm","htmlFor","contacts","keys","concat","ProfileData","_ref2","isOwner","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","formData","goToViewMode","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHook","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","store","withRouter","Children","match","params","useParams","assign","ProfileContainer","userId","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","compose"],"mappings":"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","file":"static/js/2.809c5001.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {connect} from \"react-redux/es/exports\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'} /> \r\n            }\r\n            return <Component{...this.props} />\r\n        }   \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3pX8w\",\"fullName\":\"ProfileInfo_fullName__2CdgH\",\"profileStatus\":\"ProfileInfo_profileStatus__2PLlp\",\"mainPhoto\":\"ProfileInfo_mainPhoto__CF_fo\",\"contact\":\"ProfileInfo_contact__2CADc\",\"errors\":\"ProfileInfo_errors__2ssA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qm1iG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2p2gf\",\"posts\":\"MyPosts_posts__Df_W9\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src=\"https://st2.depositphotos.com/1064024/10769/i/600/depositphotos_107694484-stock-photo-little-boy.jpg\" alt=\"boy\" />\r\n        {props.message}\r\n        <div>\r\n          <span>like </span>\r\n          {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport { validationSchemaPostForm } from \"../../../utils/validatorForms\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.profilePage.map((p,id) => <Post key={id} message={p.message} likesCount={p.like} />)\r\n   \r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n        <AddPostForm addPost={props.addPost} />\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddPostForm = (props) => {\r\n    let addNewPost = (values) => {    \r\n     props.addPost( values );    \r\n  }\r\n \r\n  return (\r\n     <Formik\r\n        initialValues={{\r\n          newPostText: \"\"\r\n        }}\r\n        validationSchema={validationSchemaPostForm}\r\n        onSubmit={(values, {resetForm}) => {\r\n          addNewPost( values.newPostText );\r\n           resetForm( {values: ''} );\r\n        }\r\n        }\r\n     >\r\n        {() => (\r\n           <Form>\r\n              <div>\r\n                 <Field\r\n                    name={'newPostText'}\r\n                    as={'textarea'}\r\n                    placeholder={'enter text'}\r\n                 />\r\n              </div>\r\n              <ErrorMessage name=\"newPostText\" component=\"div\" />\r\n              <button type={'submit'}>Add Post</button>\r\n           </Form>\r\n        )}\r\n     </Formik>\r\n  )\r\n}\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        profilePage : state.profilePage.posts,  \r\n        newPostText : state.profilePage.newPostText \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n           dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);   \r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);   \r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n     \r\n    return (\r\n\r\n        <div>\r\n            {!editMode &&\r\n                <div className={s.profileStatus}>\r\n                   <b>Status: </b><span onDoubleClick = {activateEditMode}>{props.status || \"----\"} </span>\r\n                </div>\r\n            }       \r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n        )\r\n    }\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { validationSchemaProfilForm } from \"./../../../utils/validatorForms\"\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, goToEditMode }) => {\r\n  return (\r\n  \r\n    <Formik\r\n      initialValues={profile}\r\n      validationSchema={validationSchemaProfilForm}\r\n      onSubmit={(values) => {\r\n           handleSubmit(values, goToEditMode);\r\n      }}\r\n    >\r\n      {() => (\r\n      \r\n        <Form>             \r\n           \r\n            <div>\r\n              <button type={\"submit\"}>save</button>\r\n            </div>\r\n          \r\n\r\n          <div>\r\n            <Field name={\"fullName\"} type={\"text\"} placeholder={\"fullName\"} />\r\n          </div>\r\n          <ErrorMessage name=\"fullName\" component=\"div\" className={s.errors} />\r\n          <div>\r\n            <Field\r\n              name={\"lookingForAJob\"}\r\n              type={\"checkbox\"}\r\n              id=\"lookingForAJob\"\r\n            />\r\n            <label htmlFor={\"lookingForAJob\"}>\r\n              <b> Looking for a job</b>{\" \"}\r\n            </label>\r\n          </div>\r\n          \r\n          <div>\r\n            <Field\r\n              name={\"lookingForAJobDescription\"}\r\n              as={\"textarea\"}\r\n              placeholder={\"My professional skills\"}\r\n            />\r\n          </div>\r\n          <ErrorMessage name=\"lookingForAJobDescription\" component=\"div\" className={s.errors} />\r\n          <div>\r\n            <Field name={\"aboutMe\"} as={\"textarea\"} placeholder={\"About me\"} />\r\n          </div>\r\n          <ErrorMessage name=\"aboutMe\" component=\"div\" className={s.errors} />\r\n          <div className={s.contacts}>\r\n            <b>Contacts: </b>\r\n            {Object.keys(profile.contacts).map((key) => {\r\n              return (\r\n                <div key = {key} className={s.contact}>\r\n                  <div>\r\n                    <b>{key}:</b>\r\n                  </div>\r\n                  <div>\r\n                    <Field\r\n                      name={`contacts.${key}`}\r\n                      type={\"text\"}\r\n                      id={key}\r\n                      placeholder={key}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport userPhoto from \"./../../../assets/img/user.png\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const handleSubmit = (formData, goToViewMode) => {\r\n    saveProfile(formData, goToViewMode);\r\n    setEditMode(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <div>\r\n          <img\r\n            src={profile.photos.large || userPhoto}\r\n            className={s.mainPhoto}\r\n            alt=\"main foto\"\r\n          />\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n          {editMode ? (\r\n            <ProfileDataForm profile={profile} handleSubmit={handleSubmit}/>\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n          <ProfileStatusWithHook status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div className={s.fullName}>{profile.fullName}</div>\r\n      <div className={s.lookingForAJob}>\r\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skill</b>\r\n          {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div className={s.aboutMe}>\r\n        <b>About me: </b>\r\n        {profile.aboutMe}\r\n      </div>\r\n      <div className={s.contacts}>\r\n        <b>Contacts: </b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact key = {key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      {contactTitle}:{contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto} saveProfile = {props.saveProfile}/>\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profileReducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />;\r\n  };\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.match.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
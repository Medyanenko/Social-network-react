{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","dialogs","dialogsItem","active","dialog","messages","message","link","avatar","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Work_Courses_itKamasutra_Social_network_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","path","id","react_default","className","s","src","react_router_dom","name","Message","AddMessageForm","formik_esm","initialValues","newMessageText","validationSchema","validationSchemaMessageForm","onSubmit","values","_ref","resetForm","addMessage","addNewMessage","as","placeholder","component","type","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","Dialogs_AddMessageForm","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/1.62cdf5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__I8fK-\",\"dialogsItem\":\"Dialogs_dialogsItem__1H9OL\",\"active\":\"Dialogs_active__3ltUN\",\"dialog\":\"Dialogs_dialog__gZ3-r\",\"messages\":\"Dialogs_messages__2jWf1\",\"message\":\"Dialogs_message__3BUrM\",\"link\":\"Dialogs_link__3t1OE\",\"avatar\":\"Dialogs_avatar__30PzU\"};","import React from 'react'\r\nimport {Navigate} from 'react-router-dom'\r\nimport {connect} from \"react-redux/es/exports\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'} /> \r\n            }\r\n            return <Component{...this.props} />\r\n        }   \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"dialog/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <div className={s.avatar}>\r\n        <img src={props.avatar} />\r\n      </div>\r\n      <NavLink to={path} className={s.link}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport {validationSchemaMessageForm} from \"./../../utils/validatorForms\"\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n \r\n  let dialogsElements = state.dialogs.map((d, id) => <DialogItem key={id} name={d.name} avatar={d.avatar} id={d.id} />);\r\n  let messagesElements = state.messages.map((m, id) => <Message key={id} message={m.message} />);\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n        <div className={s.dialogsItem}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n           {messagesElements}\r\n        </div>\r\n        <div>\r\n        <AddMessageForm addMessage={props.addMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  let addNewMessage = (values) => {    \r\n     props.addMessage( values );    \r\n  }\r\n\r\n  return (\r\n     <Formik\r\n        initialValues={{\r\n          newMessageText: \"\"\r\n        }}\r\n        validationSchema={validationSchemaMessageForm}\r\n        onSubmit={(values, {resetForm}) => {\r\n           addNewMessage( values.newMessageText );\r\n           resetForm( {values: ''} );\r\n        }\r\n        }\r\n     >\r\n        {() => (\r\n           <Form>\r\n              <div>\r\n                 <Field\r\n                    name={'newMessageText'}\r\n                    as={'textarea'}\r\n                    placeholder={'enter text'}\r\n                 />\r\n              </div>\r\n              <ErrorMessage name=\"newPostText\" component=\"div\" />\r\n              <button type={'submit'}>Send2</button>\r\n           </Form>\r\n        )}\r\n     </Formik>\r\n  )\r\n}\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { addMessageActionCreator} from '../../redux/dialogsReducer';\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose} from \"redux\"\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs);"],"sourceRoot":""}